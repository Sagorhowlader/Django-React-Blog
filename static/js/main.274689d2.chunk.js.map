{"version":3,"sources":["actions/types.js","actions/profile.js","components/Navbar.js","actions/auth.js","hocs/Layout.js","actions/post.js","containers/Home.js","components/CSRFToken.js","containers/Register.js","containers/Login.js","containers/Dashboard.js","hocs/PrivateRoute.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/index.js","store.js","App.js","index.js"],"names":["REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","LOGOUT_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","DELETE_USER_SUCCESS","DELETE_USER_FAIL","LOAD_USER_PROFILE_SUCCESS","LOAD_USER_PROFILE_FAIL","UPDATE_USER_PROFILE_SUCCESS","UPDATE_USER_PROFILE_FAIL","LOAD_POST_SUCCESS","LOAD_POST_FAIL","load_user","dispatch","a","config","headers","axios","get","process","res","data","error","type","payload","connect","state","isAuthenticated","auth","logout","Cookies","body","JSON","stringify","post","success","authLinks","className","to","onClick","href","guestLinks","exact","id","checkAuthenticated","load_Post","children","useEffect","Navbar","postList","userPostsList","console","log","beforLogin","afterLogin","CSRFToken","useState","csrftoken","setcsrftoken","fetchData","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","value","register","username","password","re_password","formData","setFormData","accountCreated","setAccountCreated","onChange","e","target","onSubmit","preventDefault","placeholder","required","minLength","login","first_name_global","profile","first_name","last_name_global","last_name","phone_global","phone","city_global","city","delete_account","delete","update_profile","put","htmlFor","Component","component","rest","render","props","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","path","Home","Register","Login","Dashboard","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.274689d2.chunk.js","sourcesContent":["// Auth Dispatch States\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\r\nexport const LOGOUT_FAIL = 'LOGOUT_FAIL';\r\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\r\nexport const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\r\nexport const DELETE_USER_SUCCESS = 'DELETE_USER_SUCCESS';\r\nexport const DELETE_USER_FAIL = 'DELETE_USER_FAIL';\r\n\r\n// Profile Dispatch States\r\nexport const LOAD_USER_PROFILE_SUCCESS = 'LOAD_USER_PROFILE_SUCCESS';\r\nexport const LOAD_USER_PROFILE_FAIL = 'LOAD_USER_PROFILE_FAIL';\r\nexport const UPDATE_USER_PROFILE_SUCCESS = 'UPDATE_USER_PROFILE_SUCCESS';\r\nexport const UPDATE_USER_PROFILE_FAIL = 'UPDATE_USER_PROFILE_FAIL';\r\n\r\n\r\n// Post Dispatch States\r\nexport const LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS';\r\nexport const LOAD_POST_FAIL = 'LOAD_POST_FAIL';","import Cookies from 'js-cookie';\r\nimport axios from 'axios';\r\nimport {\r\n    LOAD_USER_PROFILE_SUCCESS,\r\n    LOAD_USER_PROFILE_FAIL,\r\n    UPDATE_USER_PROFILE_SUCCESS,\r\n    UPDATE_USER_PROFILE_FAIL\r\n} from './types';\r\n\r\nexport const load_user = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    try {\r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/accounts/user`, config);\r\n\r\n        if (res.data.error) {\r\n            dispatch({\r\n                type: LOAD_USER_PROFILE_FAIL\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: LOAD_USER_PROFILE_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        }\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOAD_USER_PROFILE_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const update_profile = (first_name, last_name, phone, city) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'X-CSRFToken': Cookies.get('csrftoken')\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n        'withCredentials': true,\r\n        first_name,\r\n        last_name,\r\n        phone,\r\n        city\r\n    });\r\n\r\n    try {\r\n        const res = await axios.put(`${process.env.REACT_APP_API_URL}/profile/update`, body, config);\r\n\r\n        if (res.data.profile && res.data.username) {\r\n            dispatch({\r\n                type: UPDATE_USER_PROFILE_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: UPDATE_USER_PROFILE_FAIL\r\n            });\r\n        }\r\n    } catch (err) {\r\n        dispatch({\r\n            type: UPDATE_USER_PROFILE_FAIL\r\n        });\r\n    }\r\n};\r\n","import React, { Fragment } from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../actions/auth';\r\n\r\nconst navbar = ({ isAuthenticated, logout }) => {\r\n    const authLinks = (\r\n        <Fragment>\r\n            <li className='nav-item'>\r\n                <NavLink className='nav-link' to='/dashboard'>Dashboard</NavLink>\r\n            </li>\r\n            <li className='nav-item'>\r\n                <a className='nav-link' onClick={logout} href='#!'>Logout</a>\r\n            </li>\r\n        </Fragment>\r\n    );\r\n\r\n    const guestLinks = (\r\n        <Fragment>\r\n            <li className='nav-item'>\r\n                <NavLink className='nav-link' to='/login'>Login</NavLink>\r\n            </li>\r\n            <li className='nav-item'>\r\n                <NavLink className='nav-link' to='/register'>Register</NavLink>\r\n            </li>\r\n        </Fragment>\r\n    );\r\n\r\n    return (\r\n        <nav className='navbar navbar-expand-lg navbar-light bg-light'>\r\n            <div className='container-fluid'>\r\n                <Link className='navbar-brand' exact to='/'>Blog</Link>\r\n                <button \r\n                    className='navbar-toggler' \r\n                    type='button' \r\n                    data-bs-toggle='collapse' \r\n                    data-bs-target='#navbarNav' \r\n                    aria-controls='navbarNav' \r\n                    aria-expanded='false' \r\n                    aria-label='Toggle navigation'\r\n                >\r\n                    <span className='navbar-toggler-icon'></span>\r\n                </button>\r\n                <div className='collapse navbar-collapse' id='navbarNav'>\r\n                    <ul className='navbar-nav'>\r\n                        <li className='nav-item'>\r\n                            <NavLink className='nav-link' exact to='/'>Home</NavLink>\r\n                        </li>\r\n                        { isAuthenticated ? authLinks : guestLinks }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(navbar);\r\n","import Cookies from 'js-cookie';\r\nimport axios from 'axios';\r\nimport { load_user } from './profile';\r\nimport {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    LOGOUT_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    DELETE_USER_SUCCESS,\r\n    DELETE_USER_FAIL\r\n} from './types';\r\n\r\nexport const checkAuthenticated = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    try {\r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/accounts/authenticated`, config);\r\n\r\n        if (res.data.error || res.data.isAuthenticated === 'error') {\r\n            dispatch({\r\n                type: AUTHENTICATED_FAIL,\r\n                payload: false\r\n            });\r\n        }\r\n        else if (res.data.isAuthenticated === 'success') {\r\n            dispatch({\r\n                type: AUTHENTICATED_SUCCESS,\r\n                payload: true\r\n            });\r\n        }\r\n        else {\r\n            dispatch({\r\n                type: AUTHENTICATED_FAIL,\r\n                payload: false\r\n            });\r\n        }\r\n    } catch(err) {\r\n        dispatch({\r\n            type: AUTHENTICATED_FAIL,\r\n            payload: false\r\n        });\r\n    }\r\n};\r\n\r\nexport const login = (username, password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'X-CSRFToken': Cookies.get('csrftoken')\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ username, password });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/accounts/login`, body, config);\r\n\r\n        if (res.data.success) {\r\n            dispatch({\r\n                type: LOGIN_SUCCESS\r\n            });\r\n\r\n            dispatch(load_user());\r\n        } else {\r\n            dispatch({\r\n                type: LOGIN_FAIL\r\n            });\r\n        }\r\n    } catch(err) {\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const register = (username, password, re_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'X-CSRFToken': Cookies.get('csrftoken')\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ username, password, re_password });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/accounts/register`, body, config);\r\n\r\n        if (res.data.error) {\r\n            dispatch({\r\n                type: REGISTER_FAIL\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: REGISTER_SUCCESS\r\n            });\r\n        }\r\n    } catch (err) {\r\n        dispatch({\r\n            type: REGISTER_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const logout = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'X-CSRFToken': Cookies.get('csrftoken')\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n        'withCredentials': true\r\n    });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/accounts/logout`, body, config);\r\n\r\n        if (res.data.success) {\r\n            dispatch({\r\n                type: LOGOUT_SUCCESS\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: LOGOUT_FAIL\r\n            });\r\n        }\r\n    } catch(err) {\r\n        dispatch({\r\n            type: LOGOUT_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const delete_account = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'X-CSRFToken': Cookies.get('csrftoken')\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({\r\n        'withCredentials': true\r\n    });\r\n\r\n    try {\r\n        const res = await axios.delete(`${process.env.REACT_APP_API_URL}/accounts/delete`, config, body);\r\n\r\n        if (res.data.success) {\r\n            dispatch({\r\n                type: DELETE_USER_SUCCESS\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: DELETE_USER_FAIL\r\n            });\r\n        }\r\n    } catch (err) {\r\n        dispatch({\r\n            type: DELETE_USER_FAIL\r\n        });\r\n    }\r\n};\r\n","import React, { useEffect, Fragment } from 'react';\r\nimport Navbar from '../components/Navbar';\r\nimport { connect } from 'react-redux';\r\nimport { checkAuthenticated } from '../actions/auth';\r\nimport { load_user } from '../actions/profile';\r\nimport { load_Post } from '../actions/post';\r\n\r\nconst Layout = ({ children, checkAuthenticated, load_user , load_Post }) => {\r\n    useEffect(() => {\r\n        checkAuthenticated();\r\n        load_user();\r\n        load_Post();\r\n    }, []);\r\n\r\n    return (\r\n        <Fragment>\r\n            <Navbar />\r\n            {children}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default connect(null, { checkAuthenticated, load_user , load_Post })(Layout);\r\n","import Cookies from 'js-cookie';\r\nimport axios from 'axios';\r\nimport {\r\n    LOAD_POST_SUCCESS,\r\n    LOAD_POST_FAIL\r\n} from './types';\r\n\r\nexport const load_Post = () => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    try {\r\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/api/all-post-view`, config);\r\n        \r\n        if (res.data.error) {\r\n           \r\n            dispatch({\r\n                type: LOAD_POST_FAIL\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: LOAD_POST_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        }\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOAD_POST_FAIL\r\n        });\r\n    }\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\n\r\nconst home = ( {isAuthenticated , postList } ) => {\r\n    console.log(\"post\")\r\n    console.log(postList)\r\n    const post = (\r\n        <div className=\"card\" style=\"width: 18rem;\">\r\n                    <img src=\"...\" className=\"card-img-top\" alt=\"...\"/>\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Card title</h5>\r\n                        <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n                    </div>\r\n                    <ul className=\"list-group list-group-flush\">\r\n                        <li className=\"list-group-item\">An item</li>\r\n                        <li className=\"list-group-item\">A second item</li>\r\n                        <li className=\"list-group-item\">A third item</li>\r\n                    </ul>\r\n                    <div className=\"card-body\">\r\n                        <a href=\"#\" className=\"card-link\">Card link</a>\r\n                        <a href=\"#\" className=\"card-link\">Another link</a>\r\n                    </div>\r\n    \r\n                </div>\r\n    );\r\n    const beforLogin = (\r\n    <div className='container'>\r\n        <div className='mt-5 p-5 bg-light'>\r\n            <h1 className='display-4'>Welcome to Blog</h1>\r\n            <p className='lead'>\r\n                This is a wonderful application with session authentication in React and Django.\r\n            </p>\r\n            <hr className='my-4' />\r\n            <p>Click the button below to log in.</p>\r\n            <Link className='btn btn-primary btn-lg' to='/login'>Login</Link>\r\n        </div>\r\n    </div>\r\n    );\r\n    const afterLogin = (\r\n    \r\n        <div>post</div>\r\n\r\n    \r\n    \r\n        );\r\n    return (\r\n    \r\n    <div> { isAuthenticated ? afterLogin : beforLogin }</div>\r\n    \r\n    );\r\n\r\n\r\n    };\r\n    const mapStateToProps = state => ({\r\n        isAuthenticated: state.auth.isAuthenticated,\r\n        postList: state.post.userPostsList\r\n\r\n    });\r\nexport default connect (mapStateToProps)(home);\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst CSRFToken = () => {\r\n    const [csrftoken, setcsrftoken] = useState('');\r\n\r\n    const getCookie = (name) => {\r\n        let cookieValue = null;\r\n        if (document.cookie && document.cookie !== '') {\r\n            let cookies = document.cookie.split(';');\r\n            for (let i = 0; i < cookies.length; i++) {\r\n                let cookie = cookies[i].trim();\r\n                if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return cookieValue;\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                await axios.get(`${process.env.REACT_APP_API_URL}/accounts/csrf_cookie`);\r\n            } catch (err) {\r\n\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n        setcsrftoken(getCookie('csrftoken'));\r\n    }, []);\r\n\r\n    return (\r\n        <input type='hidden' name='csrfmiddlewaretoken' value={csrftoken} />\r\n    );\r\n};\r\n\r\nexport default CSRFToken;\r\n","import React, { useState } from 'react';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { register } from '../actions/auth';\r\nimport CSRFToken from '../components/CSRFToken';\r\n\r\nconst Register = ({ register, isAuthenticated }) => {\r\n    const [formData, setFormData] = useState({\r\n        username: '',\r\n        password: '',\r\n        re_password: ''\r\n    });\r\n    const [accountCreated, setAccountCreated] = useState(false);\r\n\r\n    const { username, password, re_password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (password === re_password) {\r\n            register(username, password, re_password);\r\n            setAccountCreated(true);\r\n        }\r\n    };\r\n\r\n    if (isAuthenticated)\r\n        return <Redirect to='/dashboard' />;\r\n    else if (accountCreated)\r\n        return <Redirect to='/login' />;\r\n\r\n    return (\r\n        <div className='container mt-5'>\r\n            <h1>Register for an Account</h1>\r\n            <p>Create an account with our Session Auth application</p>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n                <CSRFToken />\r\n                <div className='form-group'>\r\n                    <label className='form-label'>Username: </label>\r\n                    <input\r\n                        className='form-control'\r\n                        type='text'\r\n                        placeholder='Username*'\r\n                        name='username'\r\n                        onChange={e => onChange(e)}\r\n                        value={username}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label className='form-label mt-3'>Password: </label>\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='Password*'\r\n                        name='password'\r\n                        onChange={e => onChange(e)}\r\n                        value={password}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label className='form-label mt-3'>Confirm Password: </label>\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='Confirm Password*'\r\n                        name='re_password'\r\n                        onChange={e => onChange(e)}\r\n                        value={re_password}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <button className='btn btn-primary mt-3' type='submit'>Register</button>\r\n            </form>\r\n            <p className='mt-3'>\r\n                Already have an Account? <Link to='/login'>Sign In</Link>\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { register })(Register);\r\n","import React, { useState } from 'react';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../actions/auth';\r\nimport CSRFToken from '../components/CSRFToken';\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n    const [formData, setFormData] = useState({\r\n        username: '',\r\n        password: ''\r\n    });\r\n\r\n    const { username, password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        login(username, password);\r\n    };\r\n\r\n    if (isAuthenticated)\r\n        return <Redirect to='/dashboard' />;\r\n\r\n    return (\r\n        <div className='container mt-5'>\r\n            <h1>Sign In</h1>\r\n            <p>Sign into your Session Auth account</p>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n                <CSRFToken />\r\n                <div className='form-group'>\r\n                    <label className='form-label'>Username: </label>\r\n                    <input\r\n                        className='form-control'\r\n                        type='text'\r\n                        placeholder='Username*'\r\n                        name='username'\r\n                        onChange={e => onChange(e)}\r\n                        value={username}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label className='form-label mt-3'>Password: </label>\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='Password*'\r\n                        name='password'\r\n                        onChange={e => onChange(e)}\r\n                        value={password}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <button className='btn btn-primary mt-3' type='submit'>Login</button>\r\n            </form>\r\n            <p className='mt-3'>\r\n                Don't have an Account? <Link to='/register'>Sign Up</Link>\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { update_profile } from '../actions/profile';\r\nimport { delete_account } from '../actions/auth';\r\n\r\nconst Dashboard = ({\r\n    delete_account,\r\n    update_profile,\r\n    first_name_global,\r\n    last_name_global,\r\n    phone_global,\r\n    city_global\r\n}) => {\r\n    const [formData, setFormData] = useState({\r\n        first_name: '',\r\n        last_name: '',\r\n        phone: '',\r\n        city: ''\r\n    });\r\n\r\n    const { first_name, last_name, phone, city } = formData;\r\n\r\n    useEffect(() => {\r\n        setFormData({\r\n            first_name: first_name_global,\r\n            last_name: last_name_global,\r\n            phone: phone_global,\r\n            city: city_global\r\n        });\r\n    }, [first_name_global]);\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        update_profile(first_name, last_name, phone, city);\r\n    };\r\n\r\n    return (\r\n        <div className='container'>\r\n            <h1 className='mt-3'>Welcome to your User Dashboard</h1>\r\n            <p className='mt-3 mb-3'>Update your user profile below:</p>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <label className='form-label' htmlFor='first_name'>First Name</label>\r\n                    <input\r\n                        className='form-control'\r\n                        type='text'\r\n                        name='first_name'\r\n                        placeholder={`${first_name_global}`}\r\n                        onChange={e => onChange(e)}\r\n                        value={first_name}\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label className='form-label mt-3' htmlFor='last_name'>Last Name</label>\r\n                    <input\r\n                        className='form-control'\r\n                        type='text'\r\n                        name='last_name'\r\n                        placeholder={`${last_name_global}`}\r\n                        onChange={e => onChange(e)}\r\n                        value={last_name}\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label className='form-label mt-3' htmlFor='phone'>Phone</label>\r\n                    <input\r\n                        className='form-control'\r\n                        type='text'\r\n                        name='phone'\r\n                        placeholder={`${phone_global}`}\r\n                        onChange={e => onChange(e)}\r\n                        value={phone}\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label className='form-label mt-3' htmlFor='city'>City</label>\r\n                    <input\r\n                        className='form-control'\r\n                        type='text'\r\n                        name='city'\r\n                        placeholder={`${city_global}`}\r\n                        onChange={e => onChange(e)}\r\n                        value={city}\r\n                    />\r\n                </div>\r\n                <button className='btn btn-primary mt-3' type='submit'>Update Profile</button>\r\n            </form>\r\n            <p className='mt-5'>\r\n                Click the button below to delete your user account:\r\n            </p>\r\n            <a\r\n                className='btn btn-danger'\r\n                href='#!'\r\n                onClick={delete_account}\r\n            >\r\n                Delete Account\r\n            </a>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    first_name_global: state.profile.first_name,\r\n    last_name_global: state.profile.last_name,\r\n    phone_global: state.profile.phone,\r\n    city_global: state.profile.city,\r\n});\r\n\r\nexport default connect(mapStateToProps, { \r\n    delete_account,\r\n    update_profile\r\n })(Dashboard);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst PrivateRoute = ({ component: Component, isAuthenticated, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props => isAuthenticated ? <Component {...props} /> : <Redirect to='/login' />}\r\n    />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(PrivateRoute);\r\n","import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    LOGOUT_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    DELETE_USER_SUCCESS,\r\n    DELETE_USER_FAIL\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    isAuthenticated: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case AUTHENTICATED_SUCCESS:\r\n        case AUTHENTICATED_FAIL:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: payload\r\n            }\r\n        case REGISTER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n        case LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true\r\n            }\r\n        case LOGOUT_SUCCESS:\r\n        case DELETE_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n        case REGISTER_FAIL:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT_FAIL:\r\n        case DELETE_USER_FAIL:\r\n            return state\r\n        default:\r\n            return state\r\n    };\r\n};\r\n","import {\r\n    LOAD_USER_PROFILE_SUCCESS,\r\n    LOAD_USER_PROFILE_FAIL,\r\n    UPDATE_USER_PROFILE_SUCCESS,\r\n    UPDATE_USER_PROFILE_FAIL\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    username: '',\r\n    first_name: '',\r\n    last_name: '',\r\n    phone: '',\r\n    city: ''\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case LOAD_USER_PROFILE_SUCCESS:\r\n        case UPDATE_USER_PROFILE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                username: payload.username,\r\n                first_name: payload.profile.first_name,\r\n                last_name: payload.profile.last_name,\r\n                phone: payload.profile.phone,\r\n                city: payload.profile.city,\r\n            }\r\n        case LOAD_USER_PROFILE_FAIL:\r\n            return {\r\n                ...state,\r\n                username: '',\r\n                first_name: '',\r\n                last_name: '',\r\n                phone: '',\r\n                city: '',\r\n            }\r\n        case UPDATE_USER_PROFILE_FAIL:\r\n            return {\r\n                ...state\r\n            }\r\n        default:\r\n            return state\r\n    };\r\n};\r\n","import {\r\n    LOAD_POST_SUCCESS,\r\n    LOAD_POST_FAIL\r\n} from '../actions/types';\r\n\r\n\r\n\r\nconst initialState = {\r\n    userPostsList: []\r\n};\r\nexport default function(state = initialState, action) {\r\n    \r\n    const { type, payload } = action;\r\n   \r\n\r\n    switch(type) {\r\n        case LOAD_POST_SUCCESS:\r\n            console.log(payload)\r\n            return {\r\n                userPostsList: [...state.userPostsList,payload]\r\n            //  userPostsList: [...state.userPostsList,payload.post]\r\n            }\r\n        case LOAD_POST_FAIL:\r\n            return {\r\n                ...state,\r\n                userPostsList: []\r\n            }\r\n        default:\r\n            return state\r\n    };\r\n};","import { combineReducers } from 'redux';\r\nimport auth from './auth';\r\nimport profile from './profile';\r\nimport post from './post';\r\n\r\nexport default combineReducers({\r\n    auth,\r\n    profile,\r\n    post\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\nimport Layout from './hocs/Layout';\r\n\r\nimport Home from './containers/Home';\r\nimport Register from './containers/Register';\r\nimport Login from './containers/Login';\r\nimport Dashboard from './containers/Dashboard';\r\n\r\nimport PrivateRoute from './hocs/PrivateRoute';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\nconst App = () => (\r\n    <Provider store={store}>\r\n        <Router>\r\n            <Layout>\r\n                <Route exact path='/' component={Home} />\r\n                <Route exact path='/register' component={Register} />\r\n                <Route exact path='/login' component={Login} />\r\n                <PrivateRoute exact path='/dashboard' component={Dashboard} />\r\n            </Layout>\r\n        </Router>\r\n    </Provider>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}